{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },    
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_L4s",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssAnet" : {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        false,
        true
      ],
      "metadata": {
        "description": "Does the VM SKU support Accelerated Networking?"
      }
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (recommended - 3 or more)."
      },
      "minValue": 1
    },
    "dataDiskNumber": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 4,
      "metadata": {
        "description": "Number of data disk(s)."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 512,
      "minValue": 32,
      "maxValue": 4095,
      "metadata": {
        "description": "Size of each data disk(s)."
      }
    },
    "jumpBoxSku": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of Jumpbox VM"
      }
    },
    "jumpBoxAnet" : {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        false,
        true
      ],
      "metadata": {
        "description": "Does the VM SKU support Accelerated Networking?"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "crdbadmin",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/tamhinsf/CockroachDb4Azure/master/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "tenantId": "[subscription().tenantId]",
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 12))]",
    "crdbTagKey" : "crdb",
    "crdbTagValuePrefix" : "crdb-",
    "keyVaultTag" : "[concat(variables('crdbTagValuePrefix'),'keyvault')]",
    "keyVaultName": "[concat(toLower(substring(concat(resourceGroup().name,uniqueString(resourceGroup().id)), 0, 12)),'-crdbkv')]",
    "userManagedIdentityName" : "[concat(variables('namingInfix'),'-userManagedIdentity')]",
    "userManagedIdentityRoleGuid" : "[guid(variables('namingInfix'))]",
    "jumpBoxTag" : "[concat(variables('crdbTagValuePrefix'),'jumpbox')]",
    "jumpBoxName": "[concat(variables('namingInfix'), '-jbox')]",
    "jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), '-osdisk')]",
    "jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), '-ipconfig')]",
    "jumpBoxPublicIPName": "[concat(variables('jumpBoxName'), '-pip')]",
    "jumpBoxNicName": "[concat(variables('jumpBoxName'), '-nic')]",
    "jumpBoxScriptFileName": "jumpBoxDeploy.sh",
    "jumpBoxScriptUrl" : "[concat(parameters('_artifactsLocation'),variables('jumpBoxScriptFileName'), parameters('_artifactsLocationSasToken'))]",
    "virtualNetworkName": "[concat(variables('namingInfix'), '-vnet')]",
    "virtualNetworkPrefix": "10.3.0.0/16",
    "subnetName": "[concat(variables('namingInfix'), '-subnet')]",
    "subnetPrefix": "10.3.0.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "nsgName" : "[concat(variables('namingInfix'),'-nsg')]",
    "lbName": "[concat(variables('namingInfix'), '-lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbPublicIpTag" : "[concat(variables('crdbTagValuePrefix'),'lb-pip')]",
    "lbPublicIPName": "[concat(variables('lbName'), '-pip')]",
    "lbPublicHostName" : "[concat(variables('namingInfix'), '-crdbgw')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "bePoolName": "[concat(variables('namingInfix'), '-bepool')]",
    "vmssTag" : "[concat(variables('crdbTagValuePrefix'),'vmss')]",
    "vmssName" : "[concat(variables('namingInfix'),'-vmss')]",
    "vmssNicName": "[concat(variables('namingInfix'), '-nic')]",
    "vmssIpConfigName": "[concat(variables('namingInfix'), '-ipconfig')]",
    "vmssScriptFileName": "vmssDeploy.sh",
    "vmssScriptUrl" : "[concat(parameters('_artifactsLocation'), variables('vmssScriptFileName'), parameters('_artifactsLocationSasToken'))]",
    "vmssCrdbStartupScriptFileName": "vmssCrdbStartup.sh",
    "vmssCrdbStartupScriptUrl" : "[concat(parameters('_artifactsLocation'), variables('vmssCrdbStartupScriptFileName'), parameters('_artifactsLocationSasToken'))]",   
    "vmssCrdbStartupServiceFileName": "cockroachdb.service",
    "vmssCrdbStartupServiceUrl" : "[concat(parameters('_artifactsLocation'), variables('vmssCrdbStartupServiceFileName'), parameters('_artifactsLocationSasToken'))]",   
    "imageReference": "[variables('osType')]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "tags": {
        "[variables('crdbTagKey')]" : "[variables('keyVaultTag')]"
      },
      "dependsOn": [
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userManagedIdentityName'))]"
      ],
      "apiVersion": "2016-10-01",
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "accessPolicies": [
          {
            "objectId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userManagedIdentityName')), '2018-11-30').principalId]",
            "tenantId": "[variables('tenantId')]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore"
              ]
            }
          }
        ],
        "tenantId": "[variables('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "dependsOn": [
        "[variables('userManagedIdentityName')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('jumpBoxNicName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpBoxPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('jumpBoxIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('jumpBoxPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking":"[parameters('jumpBoxAnet')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpBoxPublicIPName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpBoxName')]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "securityRules": [
          {
            "name": "allowCrdb26257",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "26257",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[variables('subnetPrefix')]",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allowHttp8080",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[variables('subnetPrefix')]",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPublicIPName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "[variables('crdbTagKey')]" : "[variables('lbPublicIpTag')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('lbPublicHostName')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpBoxName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]",
        "[variables('userManagedIdentityName')]"
      ],
      "tags": {
        "[variables('crdbTagKey')]" : "[variables('jumpBoxTag')]"
      },
      "identity" :{
        "type": "UserAssigned",
        "userAssignedIdentities":{
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userManagedIdentityName'))]": {}
        }
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('jumpBoxSku')]"
        },
        "osProfile": {
          "computerName": "[variables('jumpBoxName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "I2Nsb3VkLWNvbmZpZwpwYWNrYWdlX3VwZ3JhZGU6IHRydWUKcGFja2FnZXM6Ci0gYXB0LXRyYW5zcG9ydC1odHRwcyAKLSBsc2ItcmVsZWFzZSAKLSBzb2Z0d2FyZS1wcm9wZXJ0aWVzLWNvbW1vbiAKLSBkaXJtbmdyCi0ganEKdXNlcnM6Ci0gZGVmYXVsdAotIG5hbWU6IGNvY2tyb2FjaAogIHNoZWxsOiAvYmluL2Jhc2gKcnVuY21kOgotIGN1cmwgLXNMIGh0dHBzOi8vYWthLm1zL0luc3RhbGxBenVyZUNMSURlYiB8IHN1ZG8gYmFzaCAKLSB3Z2V0IC1xTy0gaHR0cHM6Ly9iaW5hcmllcy5jb2Nrcm9hY2hkYi5jb20vY29ja3JvYWNoLXYxOS4xLjIubGludXgtYW1kNjQudGd6IHwgdGFyICB4dnoKLSBjcCAtaSBjb2Nrcm9hY2gtdjE5LjEuMi5saW51eC1hbWQ2NC9jb2Nrcm9hY2ggL3Vzci9sb2NhbC9iaW4gCi0gbWtkaXIgL3Zhci9saWIvY29ja3JvYWNoCi0gY2hvd24gLVIgY29ja3JvYWNoOmNvY2tyb2FjaCAvdmFyL2xpYi9jb2Nrcm9hY2ggCi0gQ09DS1JPQUNIX1VTRVJfSE9NRT0vaG9tZS9jb2Nrcm9hY2gKLSBDT0NLUk9BQ0hEQl9DRVJUU19QQVRIPSRDT0NLUk9BQ0hfVVNFUl9IT01FL2NlcnRzIAotIGF6IGxvZ2luIC0taWRlbnRpdHkKLSBLRVlWQVVMVF9OQU1FPWAvdXNyL2Jpbi9heiByZXNvdXJjZSBsaXN0IC0tdGFnIGNyZGI9Y3JkYi1rZXl2YXVsdCAtLXF1ZXJ5IFtdLm5hbWUgLW8gdHN2YCAKLSBjb2Nrcm9hY2ggY2VydCBjcmVhdGUtY2EgLS1jZXJ0cy1kaXI9JENPQ0tST0FDSERCX0NFUlRTX1BBVEggLS1jYS1rZXk9JENPQ0tST0FDSERCX0NFUlRTX1BBVEgvY2Eua2V5IAotIGNvY2tyb2FjaCBjZXJ0IGNyZWF0ZS1jbGllbnQgcm9vdCAtLWNlcnRzLWRpcj0kQ09DS1JPQUNIREJfQ0VSVFNfUEFUSCAtLWNhLWtleT0kQ09DS1JPQUNIREJfQ0VSVFNfUEFUSC9jYS5rZXkgCi0gL3Vzci9iaW4vYXoga2V5dmF1bHQgc2VjcmV0IHNldCAtLXZhdWx0LW5hbWUgJEtFWVZBVUxUX05BTUUgLW4gY3JkYmtleSAtZiAkQ09DS1JPQUNIREJfQ0VSVFNfUEFUSC9jYS5rZXkgCi0gL3Vzci9iaW4vYXoga2V5dmF1bHQgc2VjcmV0IHNldCAtLXZhdWx0LW5hbWUgJEtFWVZBVUxUX05BTUUgLW4gY3JkYmNydCAtZiAkQ09DS1JPQUNIREJfQ0VSVFNfUEFUSC9jYS5jcnQgCi0gY2hvd24gLVIgY29ja3JvYWNoOmNvY2tyb2FjaCAvaG9tZS9jb2Nrcm9hY2ggCi0gY2htb2QgLVIgby1yd3ggL2hvbWUvY29ja3JvYWNoIAotIGNobW9kIC1SIGcrcyAvaG9tZS9jb2Nrcm9hY2gg"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(variables('jumpBoxOSDiskName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [ 
        {
          "name": "jumpBoxScript",
          "type": "extensions",
          "apiVersion": "2018-06-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[variables('jumpBoxName')]",
            "[variables('userManagedIdentityRoleGuid')]",
            "[variables('vmssName')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('jumpBoxScriptUrl')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('bash ', variables('jumpBoxScriptFileName'))]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-08-01",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('lbPublicIPName')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "loadBalancingRules": [        
          {
            "name": "adminUiLbRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "SourceIPProtocol",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "probe": {
                "id": "[concat(variables('lbID'), '/probes/dbHealthCheck')]"
              }
            }
          },
          {
            "name": "dbPortRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 26257,
              "backendPort": 26257,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "probe": {
                "id": "[concat(variables('lbID'), '/probes/dbHealthCheck')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "dbHealthCheck",
            "properties": {
              "protocol": "Http",
              "port": 8080,
              "requestPath": "/health?ready=1",
              "intervalInSeconds": 15,
              "numberOfProbes": 4
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmssName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-06-01",
      "tags": {
        "[variables('crdbTagKey')]" : "[variables('vmssTag')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]",
        "[variables('jumpBoxName')]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userManagedIdentityName'))]": {}
      }
      },
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]",
            "copy": [
              {
                "name": "dataDisks",
                "count": "[parameters('dataDiskNumber')]",
                "input": {
                  "diskSizeGB": "[parameters('dataDiskSize')]",
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty"
                }
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('vmssNicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('vmssIpConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ]
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                  },
                  "enableAcceleratedNetworking": "[parameters('vmssAnet')]"
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssDeploy",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "forceUpdateTag": "true",
                  "settings": {
                    "fileUris": [
                      "[variables('vmssScriptUrl')]",
                      "[variables('vmssCrdbStartupScriptUrl')]",
                      "[variables('vmssCrdbStartupServiceUrl')]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat('bash ', variables('vmssScriptFileName'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('userManagedIdentityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[variables('userManagedIdentityRoleGuid')]",
      "dependsOn": [
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userManagedIdentityName'))]",
        "[variables('jumpBoxName')]"
      ],
      "apiVersion": "2017-09-01",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId":  "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userManagedIdentityName')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]"
      }
    }
  ]
}