{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_L4s",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (recommended - 3 or more)."
      },
      "minValue": 1
    },
    "dataDiskNumber": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 4,
      "metadata": {
        "description": "Number of data disk(s)."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 512,
      "minValue": 32,
      "maxValue": 4095,
      "metadata": {
        "description": "Size of each data disk(s)."
      }
    },
    "jumpBoxSku": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of Jumpbox VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/tamhinsf/CockroachDb4Azure/master/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "jumpBoxName": "[concat(variables('namingInfix'), 'jbox')]",
    "jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), 'osdisk')]",
    "jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), 'ipconfig')]",
    "jumpBoxPublicIPName": "[concat(variables('jumpBoxName'), 'pip')]",
    "jumpBoxNicName": "[concat(variables('jumpBoxName'), 'nic')]",
    "jumpBoxRoleGuid" : "[guid(variables('jumpBoxName'))]",
    "vmssUserManagedRoleName" : "[concat(variables('namingInfix'),'-roleName')]",
    "vmssUserManagedRoleGuid" : "[guid(variables('namingInfix'))]",
    "addressPrefix": "10.3.0.0/16",
    "subnetPrefix": "10.3.0.0/24",
    "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
    "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "lbPublicIPName": "[concat(variables('loadBalancerName'), 'pip')]",
    "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "natStartPort": 50000,
    "natEndPort": 50119,
    "natBackendPort": 22,
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "scriptFileName": "jumpBoxDeploy.sh",
    "jumpBoxScriptUrl" : "[concat(parameters('_artifactsLocation'),variables('scriptFileName'), parameters('_artifactsLocationSasToken'))]",
    "vmssScriptFileName": "vmssDeploy.sh",
    "vmssScriptUrl" : "[concat(parameters('_artifactsLocation'), variables('vmssScriptFileName'), parameters('_artifactsLocationSasToken'))]",
    "scriptArgs": ""
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('jumpBoxNicName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpBoxPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('jumpBoxIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('jumpBoxPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('jumpBoxPublicIPName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpBoxName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPublicIPName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-06-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('loadBalancerName')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('jumpBoxName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('jumpBoxSku')]"
        },
        "osProfile": {
          "computerName": "[variables('jumpBoxName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat(variables('jumpBoxOSDiskName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [ 
        {
          "name": "jumpBoxScript",
          "type": "extensions",
          "apiVersion": "2018-06-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[variables('jumpBoxName')]",
            "[variables('namingInfix')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('jumpBoxScriptUrl')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('bash ', variables('scriptFileName'), ' ', variables('scriptArgs'))]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[variables('jumpBoxRoleGuid')]",
      "apiVersion": "2014-10-01-preview",
      "dependsOn": [
        "[variables('jumpBoxName')]"  
      ],
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxName')), '2017-03-30', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "adminUiLbRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "probe": {
                "id": "[concat(variables('lbID'), '/probes/dbHealthCheck')]"
              }
            }
          },
          {
            "name": "dbPortRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 26257,
              "backendPort": 26257,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "probe": {
                "id": "[concat(variables('lbID'), '/probes/dbHealthCheck')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "dbHealthCheck",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "requestPath": "/health?ready=1",
              "intervalInSeconds": 100000,
              "numberOfProbes": 1000
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[variables('jumpBoxName')]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('vmssUserManagedRoleName'))]": {}
      }
      },
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]",
            "copy": [
              {
                "name": "dataDisks",
                "count": "[parameters('dataDiskNumber')]",
                "input": {
                  "diskSizeGB": "[parameters('dataDiskSize')]",
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty"
                }
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssScript",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "forceUpdateTag": "true",
                  "settings": {
                    "fileUris": [
                      "[variables('vmssScriptUrl')]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat('bash ', variables('vmssScriptFileName'), ' ' , parameters('dataDiskNumber'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('vmssUserManagedRoleName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[variables('vmssUserManagedRoleGuid')]",
      "dependsOn": [
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('vmssUserManagedRoleName'))]",
        "[variables('jumpBoxName')]"
      ],
      "apiVersion": "2017-09-01",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId":  "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('vmssUserManagedRoleName')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]"
      }
    }
  ]
}